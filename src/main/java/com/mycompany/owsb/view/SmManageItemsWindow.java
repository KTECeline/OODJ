/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.owsb.view;

import com.mycompany.owsb.model.Item;
import com.mycompany.owsb.model.SalesManager;
import java.awt.event.*;
import java.util.*;
import javax.swing.*;

/**
 *
 * @author timi
 */
public class SmManageItemsWindow extends javax.swing.JFrame {
    private final SalesManagerWindow parentWindow;
    
    // Instance of SalesManager to call sales-related methods
    private final SalesManager salesManager;
    
    private java.util.List<Item> itemDataList = new ArrayList<>();
    
    // String representing the file path for purchase order data
    private static final String ITEM_FILE = "data/items.txt";
    


    /**
     * Creates new form SmManageItemsWindow
     * @param parentWindow
     * @param salesManager
     */
    public SmManageItemsWindow(SalesManagerWindow parentWindow, SalesManager salesManager) {
        this.parentWindow = parentWindow;
        this.salesManager = salesManager;
        initComponents();
        itemDetails.setText("");
        loadItemsIntoList();
        setupWindowListener();
        
    }
    
    
    // close button go back to menu instead of close system  
    private void setupWindowListener() {
        addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent e) {
                parentWindow.showSmWindow(); // Show the homepage
                dispose(); // Close the current window
            }
        });
    }
    
    // Method to load Items from file and display them in the UI list
    private void loadItemsIntoList() {
        // Load the list of Purchase Orders from the purchase order file
        itemDataList = Item.loadFromFile(ITEM_FILE);
        
        // Update the JList and details area in the UI with the loaded Purchase Orders
        Item.updateItemListInUI(itemDataList, itemList, itemDetails);
    }
    
    private void promptForItemID() {
        String inputID = JOptionPane.showInputDialog(
            null, 
            "Enter the Item ID to edit:", 
            "Item ID", 
            JOptionPane.PLAIN_MESSAGE
        );

        if (inputID != null && !inputID.trim().isEmpty()) {
            inputID = inputID.trim().toUpperCase();
            boolean found = false;

            // Search for the item based on input ID
            for (Item item : itemDataList) {
                if (item.getItemID().equalsIgnoreCase(inputID)) {
                    salesManager.editItem(item); // Call editItem method in Sales Manager Class if item found
                    Item.updateItemListInUI(itemDataList, itemList, itemDetails); // Refresh the list
                    found = true;
                    break;
                }
            }

            if (!found) {
                JOptionPane.showMessageDialog(null, "Item ID not found.");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Please enter a valid Item ID.");
        }
    }

    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        itemList = new javax.swing.JList<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        itemDetails = new javax.swing.JTextArea();
        addItemButton = new javax.swing.JButton();
        editItemButton = new javax.swing.JButton();
        deleteItemButton = new javax.swing.JButton();
        searchField = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Items");

        itemList.setFont(new java.awt.Font("Heiti TC", 0, 12)); // NOI18N
        itemList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(itemList);

        itemDetails.setColumns(20);
        itemDetails.setFont(new java.awt.Font("Heiti TC", 0, 12)); // NOI18N
        itemDetails.setRows(5);
        jScrollPane1.setViewportView(itemDetails);

        addItemButton.setFont(new java.awt.Font("Heiti TC", 0, 12)); // NOI18N
        addItemButton.setText("Add");
        addItemButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addItemButtonActionPerformed(evt);
            }
        });

        editItemButton.setFont(new java.awt.Font("Heiti TC", 0, 12)); // NOI18N
        editItemButton.setText("Edit");
        editItemButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editItemButtonActionPerformed(evt);
            }
        });

        deleteItemButton.setFont(new java.awt.Font("Heiti TC", 0, 12)); // NOI18N
        deleteItemButton.setText("Delete");

        searchField.setFont(new java.awt.Font("Heiti TC", 0, 12)); // NOI18N
        searchField.setForeground(new java.awt.Color(102, 102, 102));
        searchField.setText("Enter Item ID");
        searchField.setToolTipText("");
        searchField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                searchFieldMouseClicked(evt);
            }
        });

        searchButton.setFont(new java.awt.Font("Heiti TC", 0, 12)); // NOI18N
        searchButton.setText("Search");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(searchField)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 263, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 263, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(addItemButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(editItemButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(deleteItemButton, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(searchButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(32, 32, 32))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(29, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(addItemButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(editItemButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(deleteItemButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void addItemButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addItemButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addItemButtonActionPerformed

    private void editItemButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editItemButtonActionPerformed
        String selectedItemID = itemList.getSelectedValue(); // Get selected item ID from JList
        if (selectedItemID != null) {
            int confirm = JOptionPane.showConfirmDialog(
                null, 
                "Are you sure you want to edit item " + selectedItemID + "?",
                "Confirm Edit", 
                JOptionPane.YES_NO_OPTION, 
                JOptionPane.QUESTION_MESSAGE
            );

            if (confirm == JOptionPane.YES_OPTION) {
                // Find the item in the list and edit it
                for (Item item : itemDataList) {
                    if (item.getItemID().equalsIgnoreCase(selectedItemID)) {
                        salesManager.editItem(item); // Call editItem method in Sales Manager Class
                        Item.updateItemListInUI(itemDataList, itemList, itemDetails); // Refresh the list
                        itemDetails.setText(""); // Clear the item details display
                        break;
                    }
                }
            }
            
        } else {
            promptForItemID();
        }
    }//GEN-LAST:event_editItemButtonActionPerformed

    private void searchFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchFieldMouseClicked
        searchField.setText("");
    }//GEN-LAST:event_searchFieldMouseClicked

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        Item.searchAndDisplayItem(searchField, itemDetails, itemDataList);
    }//GEN-LAST:event_searchButtonActionPerformed

    /**
     * @param args the command line arguments
     */


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addItemButton;
    private javax.swing.JButton deleteItemButton;
    private javax.swing.JButton editItemButton;
    private javax.swing.JTextArea itemDetails;
    private javax.swing.JList<String> itemList;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton searchButton;
    private javax.swing.JTextField searchField;
    // End of variables declaration//GEN-END:variables
}
