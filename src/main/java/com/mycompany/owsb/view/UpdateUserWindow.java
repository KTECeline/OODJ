/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.owsb.view;
import com.mycompany.owsb.model.User;
import com.mycompany.owsb.view.AdminWindow;
import javax.swing.*;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.IOException;
import java.io.*;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;

/**
 *
 * @author timi
 */
public class UpdateUserWindow extends javax.swing.JFrame {

    private AdminWindow parentWindow;
    private User currentUser; // Variable to hold the current user details

    /**
     * Creates new form UpdateUserUI
     */
    public UpdateUserWindow(AdminWindow parentWindow, User currentUser) {
        initComponents();
        this.parentWindow = parentWindow;
        this.currentUser = currentUser; // Initialize currentUser
        loadUserDetails(currentUser);
        setupWindowListener();
    }
    
    private void loadUserDetails(User user) {
        if (user != null) {
            usernameField.setText(user.getUsername());
            usernameField.setEditable(false); // Username is not editable
            
            passwordField.setText(user.getPassword());
            roles.setSelectedItem(user.getRole()); // Set current role in the combo box
        } else {
        JOptionPane.showMessageDialog(this, "No user data available.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    // close button go back to menu instead of close system  
    private void setupWindowListener() {
        addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent e) {
                parentWindow.updateUserList();
                parentWindow.showAdminWindow(); // Show the homepage
                dispose(); // Close the current window
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        homeButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        usernameField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        passwordField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        roles = new javax.swing.JComboBox<>();
        updateButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        homeButton.setFont(new java.awt.Font("Heiti TC", 0, 11)); // NOI18N
        homeButton.setText("Home");
        homeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeButtonActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Heiti TC", 0, 13)); // NOI18N
        jLabel1.setText("Update User");

        jLabel2.setFont(new java.awt.Font("Heiti TC", 0, 12)); // NOI18N
        jLabel2.setText("Username:");

        usernameField.setEditable(false);
        usernameField.setFont(new java.awt.Font("Heiti TC", 0, 12)); // NOI18N

        jLabel3.setFont(new java.awt.Font("Heiti TC", 0, 12)); // NOI18N
        jLabel3.setText("Password:");

        passwordField.setFont(new java.awt.Font("Heiti TC", 0, 12)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Heiti TC", 0, 12)); // NOI18N
        jLabel4.setText("Role:");

        roles.setFont(new java.awt.Font("Heiti TC", 0, 12)); // NOI18N
        roles.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "System Administrator", "Human Resource Officer", "Department Manager", "Payroll Officer", "Employee" }));

        updateButton.setBackground(new java.awt.Color(255, 51, 51));
        updateButton.setFont(new java.awt.Font("Heiti TC", 0, 12)); // NOI18N
        updateButton.setForeground(new java.awt.Color(255, 255, 255));
        updateButton.setText("Update");
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(roles, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(22, 22, 22)
                        .addComponent(passwordField))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(usernameField, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 77, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(homeButton)
                .addGap(77, 77, 77))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(updateButton)
                .addGap(162, 162, 162))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(160, 160, 160))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(homeButton)
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(usernameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(passwordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(roles, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(46, 46, 46)
                .addComponent(updateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(13, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void homeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homeButtonActionPerformed
        parentWindow.updateUserList();
        parentWindow.showAdminWindow(); // Show the homepage
        dispose(); // Close the current window
    }//GEN-LAST:event_homeButtonActionPerformed

    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
        String newPassword = passwordField.getText();
        String newRole = roles.getSelectedItem().toString();

        if (!isPasswordValid(newPassword)) {
            JOptionPane.showMessageDialog(this, "Password must be at least 8 characters long and include an uppercase letter, a digit, and a special character.", "Invalid Password", JOptionPane.ERROR_MESSAGE);
            return;
        }

        String filename = "user.txt";
        File file = new File(filename);
        List<String> lines = new ArrayList<>();
        boolean userUpdated = false;

        // Read the entire file into a list
        try (BufferedReader userList = new BufferedReader(new FileReader(file))) {
            String line;
            while ((line = userList.readLine()) != null) {
                System.out.println("Read line: " + line); // Debugging
                String[] data = line.split(",");

                if (data.length == 5 && data[0].equals(currentUser.getUsername())) {
                    // Replace the old line with the updated user details
                    String updatedLine = String.join(",", currentUser.getUsername(),
                        newPassword,
                        newRole,
                        data[3], // Keep failedAttempts
                        data[4]); // Keep isLocked
                    lines.add(updatedLine);
                    userUpdated = true;

                } else {
                    // Keep the old lines
                    lines.add(line);
                }
            }
        } catch (IOException e) {
            JOptionPane.showMessageDialog(this, "Error reading user file: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        if (!userUpdated) {
            JOptionPane.showMessageDialog(this, "User not found.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Write the updated list of lines back to the file, as when is open for write the old contents are removed
        try (BufferedWriter writer = new BufferedWriter(new FileWriter(file))) {
            for (String updatedLine : lines) {
                System.out.println("Writing line: " + updatedLine); // Debugging
                writer.write(updatedLine);
                writer.newLine();
            }
            JOptionPane.showMessageDialog(this, "User updated successfully.");

            // Update the currentUser object with new details
            currentUser.setPassword(newPassword);
            currentUser.setRole(newRole);

            // Close the CreateUserWindow and go back to UserWindow
            SwingUtilities.invokeLater(() -> {
                this.dispose();
                parentWindow.updateUserList();
                parentWindow.showAdminWindow();
            });

        } catch (IOException e) {
            JOptionPane.showMessageDialog(this, "Error writing to user file: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_updateButtonActionPerformed
    
    private boolean isPasswordValid(String password) {
        return password != null 
            && password.length() >= 8 
            && password.matches(".*[A-Z].*") // Check for at least one uppercase letter
            && password.matches(".*\\d.*") // Check for at least one digit
            && password.matches(".*[!@#$%^&*()_+\\-=\\[\\]{};':\"\\|,.<>/?].*"); // Check for at least one special character
    }
    

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UpdateUserWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UpdateUserWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UpdateUserWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UpdateUserWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UpdateUserWindow(null,null).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton homeButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JTextField passwordField;
    private javax.swing.JComboBox<String> roles;
    private javax.swing.JButton updateButton;
    private javax.swing.JTextField usernameField;
    // End of variables declaration//GEN-END:variables
}
